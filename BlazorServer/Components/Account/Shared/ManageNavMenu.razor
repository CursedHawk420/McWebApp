@using Microsoft.AspNetCore.Identity
@inject ILocalizer _l
@implements IDisposable

@inject SignInManager<ApplicationUser> SignInManager

<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <NavLink class="nav-link" href="Account/Manage" Match="NavLinkMatch.All">@_l["Profile"]</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link" href="Account/Manage/Email">@_l["Email"]</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link" href="Account/Manage/ChangePassword">@_l["Password"]</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link" href="Account/Manage/PersonalData">@_l["PersonalData"]</NavLink>
    </li>
</ul>

@code {
    //private bool hasExternalLogins;

    protected override async Task OnInitializedAsync()
    {
        _l.LocaleRefreshRequested += RefreshAsync;
        //hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }


    private async void RefreshAsync()
    {
        // InvokeAsync is inherited, it syncs the call back to the render thread
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        _l.LocaleRefreshRequested -= RefreshAsync;
    }
}
