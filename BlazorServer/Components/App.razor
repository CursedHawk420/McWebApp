<!DOCTYPE html>
<html lang="en">
<head>
    <title>HighGeek</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="HighGeek.eu web application">
    <base href="/" />
    <link href="@Assets["bootstrap/bootstrap.min.css"]" rel="stylesheet" />
    <link href="@Assets["app.css"]" rel="stylesheet" />
    <link href="@Assets["reconnect-modal.css"]" rel="stylesheet" />
    <link href="@Assets["BlazorServer.styles.css"]" rel="stylesheet"/>
    <link href="@Assets["https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"]" rel="stylesheet"/>
    <link href="@Assets["_content/MudBlazor/MudBlazor.min.css"]" rel="stylesheet"/>
    <ImportMap />
    <link rel="icon" type="image/png" href="favicon.ico" />
    <link rel="apple-touch-icon" href="apple-favicon.png">


    <!--<link href="https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor.ThemeManager/MudBlazorThemeManager.css" rel="stylesheet" />-->

    <HeadOutlet @rendermode="RenderModeForPage" />


</head>

<body>
    <Highgeek.McWebApp.BlazorServer.Components.Layout.ReconnectModal/>
    <Routes @rendermode="RenderModeForPage" />
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="scripts.js"></script>
    <script src="_framework/blazor.web.js"></script>
    <!--
    <script src="_framework/blazor.web.js" autostart="false"></script>
    <script>

        Blazor.start().then(() => {
            Blazor.defaultReconnectionHandler._reconnectCallback = function (d) {
                document.location.reload();
            }
        });
    </script>-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2/dist/js/bootstrap.min.js" crossorigin="anonymous" async></script>

</body>

</html>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;


    //private IComponentRenderMode? RenderModeForPage = new InteractiveServerRenderMode(prerender: false);

    private IComponentRenderMode? RenderModeForPage => (HttpContext.Request.Path.StartsWithSegments("/Account") && !HttpContext.Request.Path.StartsWithSegments("/Account/Manage"))
    ? null
        : new InteractiveServerRenderMode(prerender: false);

}