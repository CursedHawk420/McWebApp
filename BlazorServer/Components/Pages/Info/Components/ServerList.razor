@inject IServerListService _serverList
@inject ILocalizer l

<h3>@l["ServerList"]</h3>

<MudExpansionPanels MultiExpansion="true">
@foreach (var server in ServerListModels)
{
    <MudExpansionPanel Text="@(server.ServerName + " " + server.Status)">
        @foreach (var item in server.PlayerList)
        {
            <h6> item </h6>
        } 
    </MudExpansionPanel>
}
</MudExpansionPanels>

@code {
    private List<ServerListModel> ServerListModels = new List<ServerListModel>();

    protected override void OnInitialized()
    {
        ServerListModels = _serverList.GetServerList();
        _serverList.ServerListRefreshRequested += RefreshList;
        l.LocaleRefreshRequested += RefreshAsync;
    }

    private async void RefreshList()
    {
        await InvokeAsync(async () =>
        {
            ServerListModels = _serverList.GetServerList();
            StateHasChanged();
        });
    }

    private async void RefreshAsync()
    {
        // InvokeAsync is inherited, it syncs the call back to the render thread
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }


    public void Dispose()
    {
        l.LocaleRefreshRequested -= RefreshAsync;
    }
}
