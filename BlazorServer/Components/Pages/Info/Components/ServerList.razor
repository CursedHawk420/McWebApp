@inject IServerListService _serverList
@inject ILocalizer l

<MudExpansionPanels MultiExpansion="true">
    @foreach (var server in ServerListModels)
    {
        @if (server.Visible)
        {
            <MudExpansionPanel Text="@(l[server.ServerName] + " " + l[server.Status] + " " + server.PlayerList.Count)">
                @foreach (var item in server.PlayerList)
                {
                    <MudText Typo="Typo.body2">
                        <MudImage Height="32" Src="@("https://api.highgeek.eu/api/skins/playerhead/"+item)"></MudImage>
                        @item
                    </MudText>
                }
            </MudExpansionPanel>
        }
    }
</MudExpansionPanels>

@code {
    private List<ServerListModel> ServerListModels = new List<ServerListModel>();

    protected override void OnInitialized()
    {
        ServerListModels = _serverList.GetServerList();
        _serverList.ServerListRefreshRequested += RefreshList;
        l.LocaleRefreshRequested += RefreshAsync;
    }

    private async void RefreshList()
    {
        await InvokeAsync(async () =>
        {
            ServerListModels = _serverList.GetServerList();
            StateHasChanged();
        });
    }

    private async void RefreshAsync()
    {
        // InvokeAsync is inherited, it syncs the call back to the render thread
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }


    public void Dispose()
    {
        l.LocaleRefreshRequested -= RefreshAsync;
    }
}
