@using Microsoft.AspNetCore.Identity
@inject IUserService _userService
@inject IRefreshService _refreshService
@inject ILocalizer _localizer

@implements IAsyncDisposable

<ul class="nav nav-pills flex-column">
    <AuthorizeView Policy="connectedaccount">
        <NotAuthorized>
            <li class="nav-item">
                <NavLink class="nav-link" href="/Minecraft/Account/Register" Match="NavLinkMatch.All">@_localizer["McNavMenuConnectAccount"]</NavLink>
            </li>
        </NotAuthorized>
        <Authorized>
            <li class="nav-item">
                <NavLink class="nav-link" href="Minecraft/Account/Statistics">@_localizer["McNavMenuStats"]</NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="Minecraft/Account/Inventory">@_localizer["McNavMenuInventory"]</NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="Minecraft/Account/Skin">@_localizer["McNavMenuSkin"]</NavLink>
            </li>
            <!--
            <li class="nav-item">
                <NavLink class="nav-link" href="Minecraft/Account/Pets">Pets</NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="Minecraft/Account/Talismans">Talismans</NavLink>
            </li>-->
            <li class="nav-item">
                <NavLink class="nav-link" href="Minecraft/Account/Settings">@_localizer["McNavMenuSettings"]</NavLink>
            </li>
        </Authorized>
    </AuthorizeView>
</ul>

@code {
    //TODO Dispose

    protected override async Task OnInitializedAsync()
    {
        _refreshService.PageRefreshRequested += Refresh;
        _localizer.LocaleRefreshRequested += RefreshAsync;

        Refresh();
    }


    private async void RefreshAsync()
    {
        // InvokeAsync is inherited, it syncs the call back to the render thread
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
    public async void Refresh()
    {
        StateHasChanged();
    }

    public async ValueTask DisposeAsync()
    {
        _refreshService.PageRefreshRequested -= Refresh;
        _localizer.LocaleRefreshRequested -= StateHasChanged;
    }
}
