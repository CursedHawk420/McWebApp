@page "/"
@implements IDisposable
@inject ILocalizer _localizer
<!--
<MainCarouselComponent />
-->

<PageTitle>HighGeek</PageTitle>

<div class="container">
    <div class="row">
        <MudText Class="col" Style="margin:10px" Align="@Align.Center" Typo="Typo.h3">@_localizer["WelcomeMessage"]</MudText>
    </div>
    
    <div class="row mx-auto" style="max-height:50em;height: calc(150vh - 44em); width:98%">
        <MudCarousel Class="justify-center" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="CarouselContent">
            @foreach (var item in carousel)
            {
                <MudCarouselItem Transition="transition" Color="@Color.Transparent" Style="">
                    <MudImage Src="@item.Imageurl" Alt="Swedish Farm House" Style="width:100%;" Class="" />
                    <MudText Align="@Align.Center" Typo="Typo.h4">@((MarkupString)item.Header)</MudText>
                    <MudText Align="@Align.Center" Typo="Typo.subtitle1">@((MarkupString)item.Content)</MudText>
                </MudCarouselItem>
            }
        </MudCarousel>
    </div>
</div>
@code {
    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;

    private McWebApp1CmsContext _cmsContext = new McWebApp1CmsContext();

    List<CarouselContent> carousel = new List<CarouselContent>();

    //MudText WelcomeMessage;
    protected override void OnInitialized()
    {
        _localizer.LocaleRefreshRequested += RefreshAsync;
        GetCarouselContents();
    }

    private async void RefreshAsync()
    {
        // InvokeAsync is inherited, it syncs the call back to the render thread
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void GetCarouselContents()
    {
        var data = _cmsContext.CarouselContents.OrderBy(c => c.Order);

        carousel = data.ToList();
        carousel.RemoveAll(s => s.Visible == false);
    }

    public void Dispose()
    {
        _localizer.LocaleRefreshRequested -= StateHasChanged;
        carousel = null;

        _cmsContext.Dispose();
    }
}